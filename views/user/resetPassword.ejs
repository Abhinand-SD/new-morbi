<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Reset Password</title>
    <link rel="stylesheet" href="/css/forgotPassword.css">
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
</head>
<body>
    <form id="resetPasswordForm" action="/user/reset-password/<%= token %>" method="POST">
        <h2>Reset Your Password</h2>
        
        <label for="password">New Password:</label>
        <input type="password" id="password" name="password" placeholder="Enter your new password" required>
        
        <label for="confirmPassword">Confirm Password:</label>
        <input type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirm your new password" required>

        <div id="passwordStrengthMessage" style="color: red; font-size: 12px;"></div>

        <button type="submit">Reset Password</button>
    </form>

    <div id="popupMessage" class="popup-message"></div>

    <script>
        function showPopupMessage(message, isError = false) {
            const popup = document.getElementById("popupMessage");
            popup.textContent = message;
            popup.style.color = isError ? "red" : "green";
            popup.style.display = "block";

            setTimeout(() => {
                popup.style.display = "none";
            }, 3000);
        }

        // Password validation function
        function validatePassword(password) {
            const minLength = 8;
            const hasUpperCase = /[A-Z]/.test(password);
            const hasLowerCase = /[a-z]/.test(password);
            const hasNumber = /\d/.test(password);
            const hasSpecialChar = /[!@#$%^&*(),.?":{}|<>]/.test(password);

            let message = "";
            let isValid = true;

            
            if (password.length < minLength) {
                message += "Password must be at least 8 characters long. ";
                isValid = false;
            }
            if (!hasUpperCase) {
                message += "Password must contain at least one uppercase letter. ";
                isValid = false;
            }
            if (!hasLowerCase) {
                message += "Password must contain at least one lowercase letter. ";
                isValid = false;
            }
            if (!hasNumber) {
                message += "Password must contain at least one number. ";
                isValid = false;
            }
            if (!hasSpecialChar) {
                message += "Password must contain at least one special character. ";
                isValid = false;
            }

            // Display password validation message
            document.getElementById("passwordStrengthMessage").textContent = message;
            return isValid;
        }

        document.getElementById('resetPasswordForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const password = document.getElementById('password').value.trim();
            const confirmPassword = document.getElementById('confirmPassword').value.trim();
            const token = "<%= token %>"; // EJS renders token here

            // Validate password
            if (!password || !confirmPassword) {
                showPopupMessage("Please enter both passwords.", true);
                return;
            }

            // Password strength check
            if (!validatePassword(password)) {
                showPopupMessage("Password does not meet required criteria.", true);
                return;
            }

            // Check if passwords match
            if (password !== confirmPassword) {
                showPopupMessage("Passwords do not match.", true);
                return;
            }

            try {
                const response = await axios.post(`/user/reset-password/${token}`, { password });

                if (response.data.success) {
                    showPopupMessage(response.data.message || "Password reset successfully.");
                    setTimeout(() => {
                        window.location.href = "/user/login";
                    }, 2000);
                } else {
                    showPopupMessage(response.data.message || "Failed to reset password.", true);
                }
            } catch (error) {
                console.error("Error:", error);
                showPopupMessage("An error occurred. Please try again.", true);
            }
        });
    </script>
</body>
</html>
